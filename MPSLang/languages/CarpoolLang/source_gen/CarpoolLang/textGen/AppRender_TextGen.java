package CarpoolLang.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.core.behavior.BaseConcept__BehaviorDescriptor;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SProperty;

public class AppRender_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    if (SPropertyOperations.hasValue(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.componentName$1j5l), PROPS.componentName$i_FD, "Home")) {
      tgs.append("Home\n");
    }
    if (SPropertyOperations.hasValue(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.componentName$1j5l), PROPS.componentName$i_FD, "FindARide")) {
      tgs.append("\n\n// find-ride page\n");
      tgs.append("return (\n");
      ctx.getBuffer().area().increaseIndent();
      tgs.indent();
      tgs.append("<>\n");
      ctx.getBuffer().area().increaseIndent();
      tgs.indent();
      tgs.append("<div className=\"mx-auto max-w-7xl px-6\">\n");
      ctx.getBuffer().area().increaseIndent();
      tgs.indent();
      tgs.append("<h1 className=\"mb-8 text-3xl font-bold\">Available Rides</h1>\n");
      tgs.indent();
      tgs.append("<div className=\"grid grid-cols-2 gap-8\">\n");
      ctx.getBuffer().area().increaseIndent();
      if (BaseConcept__BehaviorDescriptor.getDetailedPresentation_id22G2W3WJ92t.invoke(ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.listOfChildRenders$9qWf)).last()) == "card") {
        tgs.indent();
        tgs.append("<FindARide onFilter={handleFilter} />\n");
        tgs.indent();
        tgs.append("<RideList \n");
        tgs.indent();
        tgs.append("rides={filteredRides}\n");
        tgs.indent();
        tgs.append("onUpdateRide={onUpdateRide}\n");
        tgs.indent();
        tgs.append("userId={session?.user?.id}\n");
        tgs.indent();
        tgs.append("/>\n");

      } else {
        tgs.indent();
        tgs.append("<RideList \n");
        tgs.indent();
        tgs.append("rides={filteredRides}\n");
        tgs.indent();
        tgs.append("onUpdateRide={onUpdateRide}\n");
        tgs.indent();
        tgs.append("userId={session?.user?.id}\n");
        tgs.indent();
        tgs.append("/>\n");
        tgs.indent();
        tgs.append("<FindARide onFilter={handleFilter} />\n");
      }
      ctx.getBuffer().area().decreaseIndent();
      tgs.indent();
      tgs.append("</div>\n");
      ctx.getBuffer().area().decreaseIndent();
      tgs.indent();
      tgs.append("</div>\n");
      ctx.getBuffer().area().decreaseIndent();
      tgs.indent();
      tgs.append("</>\n");
      ctx.getBuffer().area().decreaseIndent();
      tgs.indent();
      tgs.append(");\n");
      tgs.append("// end  find-ride page \n\n\n");
    }
    if (SPropertyOperations.hasValue(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.componentName$1j5l), PROPS.componentName$i_FD, "Profile")) {
      tgs.append("// start Profile page\n");
      tgs.append("return (\n");
      ctx.getBuffer().area().increaseIndent();
      tgs.indent();
      tgs.append("<div className=\"container mx-auto\">\n");
      ctx.getBuffer().area().increaseIndent();
      tgs.indent();
      tgs.append("<div className=\"mx-auto max-w-4xl\">\n");
      ctx.getBuffer().area().increaseIndent();
      tgs.indent();
      tgs.append("<div className=\"mb-8 flex items-center gap-6\">\n");
      ctx.getBuffer().area().increaseIndent();
      tgs.indent();
      tgs.append("<Avatar className=\"h-24 w-24\">\n");
      ctx.getBuffer().area().increaseIndent();
      tgs.indent();
      tgs.append("<User className=\"h-12 w-12\" />\n");
      ctx.getBuffer().area().decreaseIndent();
      tgs.indent();
      tgs.append("</Avatar>\n");
      tgs.indent();
      tgs.append("<div>\n");
      ctx.getBuffer().area().increaseIndent();
      tgs.indent();
      tgs.append("<h1 className=\"text-3xl font-bold text-foreground\">\n");
      ctx.getBuffer().area().increaseIndent();
      tgs.indent();
      tgs.append("{session?.user.name} {session?.user.surname}\n");
      ctx.getBuffer().area().decreaseIndent();
      tgs.indent();
      tgs.append("</h1>\n");
      tgs.indent();
      tgs.append("<p className=\"text-muted-foreground\">@{session?.user.username}</p>\n");
      ctx.getBuffer().area().decreaseIndent();
      tgs.indent();
      tgs.append("</div>\n");
      ctx.getBuffer().area().decreaseIndent();
      tgs.indent();
      tgs.append("</div>\n");
      tgs.indent();
      tgs.append("TABS\n\n");
      ctx.getBuffer().area().decreaseIndent();
      tgs.indent();
      tgs.append("</div>\n");
      ctx.getBuffer().area().decreaseIndent();
      tgs.indent();
      tgs.append("</div>\n");
      ctx.getBuffer().area().decreaseIndent();
      tgs.append(");\n");
      tgs.append("// end Profile page\n");
    }
  }

  private static final class LINKS {
    /*package*/ static final SReferenceLink componentName$1j5l = MetaAdapterFactory.getReferenceLink(0x722e4ffa13ae440cL, 0xb33c3c19945a9c69L, 0x6234383efa05b791L, 0x6234383efa05b794L, "componentName");
    /*package*/ static final SContainmentLink listOfChildRenders$9qWf = MetaAdapterFactory.getContainmentLink(0x722e4ffa13ae440cL, 0xb33c3c19945a9c69L, 0x6234383efa05b791L, 0x15c1251b5404ad15L, "listOfChildRenders");
  }

  private static final class PROPS {
    /*package*/ static final SProperty componentName$i_FD = MetaAdapterFactory.getProperty(0x722e4ffa13ae440cL, 0xb33c3c19945a9c69L, 0x6234383efa002bb6L, 0x6234383efa002bb8L, "componentName");
  }
}
